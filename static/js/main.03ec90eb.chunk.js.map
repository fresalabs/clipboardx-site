{"version":3,"sources":["layouts/contants.tsx","history.ts","icons/Clipboardx.tsx","layouts/components/RoutesBar.tsx","layouts/components/AppLayout.tsx","home/Features.tsx","home/Heading.tsx","home/Home.tsx","instructions/Heading.tsx","instructions/Guide.tsx","instructions/Instructions.tsx","about/About.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["primaryNavigationRoutes","menuItems","id","name","path","createBrowserHistory","Container","styled","div","ClipBoardX","fill","viewBox","height","width","xmlns","fillRule","clipRule","d","Selected","StyledDiv","AppBar","RoutesBar","R","item","selected","history","location","pathname","onClick","push","React","Component","ContentContainer","PrimarySearchAppBar","children","this","props","FeaturesContainer","Feature","Features","features","icon","SafetyCertificateOutlined","style","fontSize","color","description","ClockCircleTwoTone","CheckCircleOutlined","feature","HeadingContainer","Heading","Home","Guide","img","Instructions","AboutContainer","About","app","exact","component","App","getRoutes","AppLayout","render","to","map","index","key","Fragment","withRouter","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.03ec90eb.chunk.js","sourcesContent":["export const primaryNavigationRoutes: Record<string, string> = {\n  home: '/home',\n  instructions: '/instructions',\n  about: '/about',\n};\n\nexport interface MenuItem {\n  id: string;\n  name: string;\n  path: (id?: string) => string;\n}\n\nexport const menuItems: MenuItem[] = [\n  {\n    id: primaryNavigationRoutes.home,\n    name: 'Home',\n    path: () => primaryNavigationRoutes.home,\n  },\n  {\n    id: primaryNavigationRoutes.instructions,\n    name: 'Instructions',\n    path: () => primaryNavigationRoutes.instructions,\n  },\n  {\n    id: primaryNavigationRoutes.about,\n    name: 'About',\n    path: () => primaryNavigationRoutes.about,\n  },\n];\n","import {createBrowserHistory} from 'history';\n\nexport default createBrowserHistory();\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  background-color: white;\n  width: 40px;\n  height: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 20px;\n  border-radius: 4px;\n`;\n\nconst ClipBoardX = () => (\n  <Container>\n    <div>\n      <svg fill=\"none\" viewBox=\"0 0 22 22\" height=\"24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M8 3C8 2.44772 8.44772 2 9 2H15C15.5523 2 16 2.44772 16 3H18C19.1046 3 20 3.89543 20 5V20C20 21.1046 19.1046 22 18 22H6C4.89543 22 4 21.1046 4 20V5C4 3.89543 4.89543 3 6 3H8ZM8 5H6V20H18V5H16V6C16 6.55228 15.5523 7 15 7H9C8.44772 7 8 6.55228 8 6V5ZM14 4H10V5H14V4Z\"\n          fill=\"#282828\"\n        />\n      </svg>\n    </div>\n  </Container>\n);\n\nexport default ClipBoardX;\n","import React from 'react';\nimport styled from 'styled-components';\nimport * as R from 'ramda';\nimport { menuItems } from '../contants';\nimport history from '../../history';\nimport ClipBoardX from '../../icons/Clipboardx';\n\nconst Container = styled.div`\n  flex-basis: 33%;\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  flex-direction: row;\n`;\n\nconst Selected = styled.div<{ selected: boolean } & React.HTMLProps<HTMLDivElement>>`\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  cursor: pointer;\n`;\n\nconst StyledDiv = styled.div`\n  color: #465765;\n  padding: 20px;\n  cursor: pointer;\n`;\n\nconst AppBar = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n`;\n\nclass RoutesBar extends React.Component {\n  render() {\n    return (\n      <AppBar>\n        <ClipBoardX />\n        <Container>\n          {R.map(\n            (item) => (\n              <Selected selected={history.location.pathname === item.path()} onClick={() => history.push(item.path())}>\n                <StyledDiv>{item.name}</StyledDiv>\n              </Selected>\n            ),\n            menuItems\n          )}\n        </Container>\n      </AppBar>\n    );\n  }\n}\n\nexport default RoutesBar;\n","import React from 'react';\nimport styled from 'styled-components';\nimport RoutesBar from \"./RoutesBar\";\n\nconst Container = styled.div`\n  height: 100%;\n  overflow-x: hidden;\n`;\n\nconst ContentContainer = styled.div`\n  margin-bottom: 200px;\n  width: 100%;\n  min-height: 45vh;\n`;\n\nclass PrimarySearchAppBar extends React.Component<any> {\n  render() {\n    const { children } = this.props;\n    return (\n      <Container>\n        <RoutesBar />\n        <ContentContainer>{children}</ContentContainer>\n      </Container>\n    );\n  }\n}\n\nexport default PrimarySearchAppBar;\n","import React from 'react';\nimport * as R from 'ramda';\nimport { SafetyCertificateOutlined, ClockCircleTwoTone, CheckCircleOutlined } from '@ant-design/icons';\n\nimport styled from 'styled-components';\n\nconst FeaturesContainer = styled.div`\n  h1 {\n  color: rgba(255, 255, 255, 0.8);\n    text-align: center;\n    font-weight: bold;\n    margin-bottom: 40px;\n    padding-top: 40px;\n  }\n`;\n\nconst StyledDiv = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 50px 0;\n`;\n\nconst Feature = styled.div`\n  background-color: rgba(255, 255, 255, 0.1);\n  text-align: center;\n  padding: 30px;\n  margin-bottom: 30px;\n  color: rgba(255, 255, 255, 0.8);\n  margin-left: 20px;\n  border-radius: 4px;\n  max-width: 16%;\n  p {\n    margin-block-start: 1em;\n    margin-block-end: 1em;\n    margin-inline-start: 0;\n    margin-inline-end: 0;\n  }\n`;\n\nclass Features extends React.Component<any, any> {\n  render() {\n    const features: Array<{ icon: React.ReactNode; name: string; description: string }> = [\n      {\n        icon: <SafetyCertificateOutlined style={{ fontSize: 44, color: '#1890ff' }} />,\n        name: 'Accessible',\n        description: \"A light app that lives on your menu bar. Ready when you 're ready.\",\n      },\n      {\n        icon: <ClockCircleTwoTone style={{ fontSize: 44, color: '#1890ff' }} />,\n        name: 'Fast',\n        description: 'Quickly browse through your history to find what you want. No distractions.',\n      },\n      {\n        icon: <CheckCircleOutlined style={{ fontSize: 44, color: '#1890ff' }} />,\n        name: 'Simple',\n        description: \"You don't need a degree to use this app. It's stimple easy to use.\",\n      },\n    ];\n\n    return (\n      <FeaturesContainer>\n        <h1>Features</h1>\n        <StyledDiv>\n          {R.map(\n            (feature) => (\n              <Feature>\n                {feature.icon}\n                <h2>{feature.name}</h2>\n                <p>{feature.description}</p>\n              </Feature>\n            ),\n            features\n          )}\n        </StyledDiv>\n      </FeaturesContainer>\n    );\n  }\n}\n\nexport default Features;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst HeadingContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  color: rgba(255, 255, 255, 0.8);\n  align-items: center;\n  width: 100%;\n  padding-right: 15px;\n  padding-left: 15px;\n  margin-right: auto;\n  margin-left: auto;\n  span {\n    text-align: center;\n    font-size: 198%;\n    font-family: 'Roboto Mono', monospace;\n    font-weight: normal;\n    letter-spacing: 15px;\n  }\n  p {\n    font-size: 21px;\n    font-weight: bolder;\n    line-height: 1.2;\n    letter-spacing: 5px;\n    margin-bottom: 40px;\n  }\n  button {\n    border-radius: 4px;\n    cursor: pointer;\n    background-color: rgba(255, 255, 255, 0.8);\n    padding: 1.25rem 2.5rem;\n    font-size: 20px;\n    box-shadow: 0 3px 3px 0 rgba(0, 0, 0, 0.1);\n    font-weight: 700;\n    color: #212529;\n    background-color: #f8f9fa;\n    border: none;\n  }\n`;\n\nclass Heading extends React.Component<any, any> {\n  render() {\n    return (\n      <HeadingContainer>\n        <span>ClipboardX</span>\n        <p>Copy Save Paste</p>\n        <button>Download</button>\n      </HeadingContainer>\n    );\n  }\n}\n\nexport default Heading;\n","import React from 'react';\nimport Features from './Features';\nimport Heading from \"./Heading\";\n\nclass Home extends React.Component<{}> {\n  render() {\n    return (\n      <div>\n        <Heading/>\n        <Features />\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst HeadingContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  color: rgba(255, 255, 255, 0.8);\n  align-items: center;\n  width: 100%;\n  padding-right: 15px;\n  padding-left: 15px;\n  margin-right: auto;\n  margin-left: auto;\n  span {\n    text-align: center;\n    font-size: 198%;\n    font-family: 'Roboto Mono', monospace;\n    font-weight: normal;\n  }\n  p {\n    font-size: 21px;\n    font-weight: bolder;\n    line-height: 1.2;\n    letter-spacing: 5px;\n    margin-bottom: 40px;\n  }\n`;\n\nclass Heading extends React.Component<any, any> {\n  render() {\n    return (\n      <HeadingContainer>\n        <span>How To Launch On Startup</span>\n        <p>The simple guide.</p>\n      </HeadingContainer>\n    );\n  }\n}\n\nexport default Heading;\n","import React from 'react';\nimport * as R from 'ramda';\nimport { SafetyCertificateOutlined, ClockCircleTwoTone, CheckCircleOutlined } from '@ant-design/icons';\n\nimport styled from 'styled-components';\n\nconst StyledDiv = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n  padding: 50px 0;\n`;\n\nconst Feature = styled.div`\n  text-align: center;\n  padding: 30px;\n  margin-bottom: 30px;\n  color: rgba(255, 255, 255, 0.8);\n  margin-left: 20px;\n  border-radius: 4px;\n  p {\n    margin-block-start: 1em;\n    margin-block-end: 1em;\n    margin-inline-start: 0;\n    margin-inline-end: 0;\n    font-size: 1.75em;\n    font-weight: 700;\n  }\n`;\n\nclass Guide extends React.Component<any, any> {\n  render() {\n    const features: Array<{ img: React.ReactNode; description: string }> = [\n      {\n        img: <SafetyCertificateOutlined style={{ fontSize: 44, color: '#1890ff' }} />,\n        description: \"Click the 🍏 icon on the top left then System Preferences.\",\n      },\n      {\n        img: <ClockCircleTwoTone style={{ fontSize: 44, color: '#1890ff' }} />,\n        description: 'Select Users & Groups.',\n      },\n      {\n        img: <CheckCircleOutlined style={{ fontSize: 44, color: '#1890ff' }} />,\n        description: \"Click Login Items tab then ➕.\",\n      },\n    ];\n\n    return (\n      <StyledDiv>\n        {R.map(\n          (feature) => (\n            <Feature>\n              <p>{feature.description}</p>\n              {feature.img}\n            </Feature>\n          ),\n          features\n        )}\n      </StyledDiv>\n    );\n  }\n}\n\nexport default Guide;\n","import React from 'react';\nimport Heading from './Heading';\nimport Guide from './Guide';\n\nclass Instructions extends React.Component {\n  render() {\n    return (\n      <div>\n        <Heading />\n        <Guide />\n      </div>\n    );\n  }\n}\n\nexport default Instructions;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst AboutContainer = styled.div`\n  h2 {\n    color: white;\n    font-size: 50px;\n    padding-top: 0;\n    margin-top: 35px;\n    font-weight: bold;\n    text-align: center;\n    margin-bottom: 40px;\n  }\n  p {\n    color: white;\n    font-size: 24px;\n    text-align: center;\n  }\n`;\n\nclass About extends React.Component<any> {\n  render() {\n    return (\n      <AboutContainer>\n        <h2>About</h2>\n        <p>\"I heard you like copies, so I saved a copy of your copy so you can copy your copies\"</p>\n      </AboutContainer>\n    );\n  }\n}\n\nexport default About;\n","import React from 'react';\nimport { Route, Redirect, withRouter, RouteComponentProps } from 'react-router-dom';\nimport AppLayout from './layouts/components/AppLayout';\nimport { primaryNavigationRoutes } from './layouts/contants';\nimport Home from './home/Home';\nimport Instructions from './instructions/Instructions';\nimport About from './about/About';\n\nconst app = [\n  {\n    path: primaryNavigationRoutes.home,\n    exact: true,\n    component: Home,\n  },\n  {\n    path: primaryNavigationRoutes.instructions,\n    exact: true,\n    component: Instructions,\n  },\n  {\n    path: primaryNavigationRoutes.about,\n    exact: true,\n    component: About,\n  }\n];\n\nclass App extends React.Component<RouteComponentProps> {\n  getRoutes = () => {\n    return (\n      <AppLayout>\n        <Route\n          exact\n          path=\"/\"\n          render={() => {\n            return <Redirect to={primaryNavigationRoutes.home} />;\n          }}\n        />\n        {app.map(({ component, path, exact }, index: number) => (\n          <Route exact={exact} path={path} key={index} component={component} />\n        ))}\n      </AppLayout>\n    );\n  };\n\n  render() {\n    return <React.Fragment>{this.getRoutes()}</React.Fragment>;\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport history from './history';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router history={history}>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}